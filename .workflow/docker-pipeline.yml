version: '1.0'
name: docker-pipeline
displayName: Docker镜像构建与推送
triggers:
  trigger: auto
  push:
    branches:
      include:
        - master
    tags:
      include:
        - v*.*.*
env:
  REGISTRY: docker.io
  IMAGE_NAME: qimenidc/server
  PLATFORMS: linux/amd64,linux/arm64
stages:
  - name: compile
    displayName: 编译
    strategy: naturally
    trigger: auto
    steps:
      - step: build@gradle
        name: build_gradle
        displayName: Gradle 构建
        jdkVersion: '17'
        gradleVersion: 4.4
        commands:
          - chmod +x ./gradlew
          - ./gradlew build
        artifacts:
          - name: BUILD_ARTIFACT
            path:
              - ./build
        strategy: {}
  - name: docker_build
    displayName: Docker构建与推送
    strategy: naturally
    trigger: auto
    steps:
      - step: build@docker
        name: build_docker_image
        displayName: 构建Docker镜像
        dependArtifact: BUILD_ARTIFACT
        dockerfile: Dockerfile
        buildArgs:
          - name: JAVA_VERSION
            value: 17
          - name: APP_VERSION
            value: $BUILD_ID
        platforms:
          - linux/amd64
          - linux/arm64
        tags:
          - latest
          - $BUILD_ID
          - type=ref,event=branch
          - type=semver,pattern={{version}}
          - type=semver,pattern={{major}}.{{minor}}
          - type=sha,format=long
        cache:
          enabled: true
          path: /tmp/.buildx-cache
        artifacts:
          - name: DOCKER_IMAGE
            path:
              - ./build/libs/QimenIDC-Server.jar
              - ./config/
              - ./SQL/
        strategy:
          retry: 
            count: 2
            condition: ALL_STAGES_FAILURE
      - step: publish@docker
        name: publish_docker_image
        displayName: 推送Docker镜像
        dependArtifact: DOCKER_IMAGE
        repository: ${{ env.IMAGE_NAME }}
        registry: ${{ env.REGISTRY }}
        platforms: ${{ env.PLATFORMS }}
        push: true
        tags: ${{ steps.build_docker_image.outputs.tags }}
        cache: 
          from: type=local,src=/tmp/.buildx-cache
          to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        envs:
          - name: DOCKER_USERNAME
            value: ${{ secrets.DOCKER_USERNAME }}
          - name: DOCKER_PASSWORD
            value: ${{ secrets.DOCKER_TOKEN }}
        postCommands:
          - rm -rf /tmp/.buildx-cache
          - mv /tmp/.buildx-cache-new /tmp/.buildx-cache